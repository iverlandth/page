<div id="readme" class="blob instapaper_body">
<article class="container" itemprop="mainContentOfPage"><h1>
  <a name="textos" class="anchor" href="#textos"><span class="mini-icon mini-icon-link"></span></a>Textos</h1>

<p>Así que hemos aprendido todo acerca de
  <%= link_to "Números", :controller => :ruby, :action => "numeros" %>,
  ¿pero qué acerca de letras? ¿palabras? ¿textos?</p>

<p>Nos referimos a grupos de letras en un programa como textos. (Tú puedes
  pensar en letras impresas siendo ensartadas en un cartel.)
  Aquí hay algunos textos:</p>

<pre><code>'Hola.'
  'Ruby la rompe.'
  '5 es mi número favorito... ¿Cuál es el tuyo?'
  'Snoopy dice #%^?&amp;*@! cuando le aplastan el dedo del pie.'
  ' '
  ''
</code></pre>

<p>Como puedes ver, los textos pueden tener puntuación, dígitos, símbolos,
  y espacios dentro... más que solo palabras. Ese último texto
  no tiene nada y podemos llamarlo un texto vacío. </p>

<p>Hemos estado usando <code>puts</code> para imprimir números, intentémoslo con textos:</p>

<p><em>Código:</em></p>

<pre><code>puts 'Hola, mundo!'
  puts ''
  puts 'Adiós.'
</code></pre>

<p><em>Resultado:</em></p>

<pre><code>Hola Mundo

  Adiós
</code></pre>

<p>Eso funcionó bien. Ahora inténtalo con algún texto tuyo. </p>

<h2>
  <a name="aritm%C3%A9tica-de-textos" class="anchor" href="#aritm%C3%A9tica-de-textos"><span class="mini-icon mini-icon-link"></span></a>Aritmética
  de textos</h2>

<p>Igual que hacer hacer aritmética con números, ¡tú puedes también hacer
  aritmética con textos! Bueno, algo así... puedes sumar textos, digamos.
  Intentemos sumar dos textos y ver que hace
  <code>puts</code> con eso. </p>

<p><em>Código:</em></p>

<pre><code>puts 'Me gusta' + 'el pastel de manzana.'
</code></pre>

<p><em>Resultado:</em></p>

<pre><code>Me gustael pastel de manzana
</code></pre>

<p>Whoops! Me olvidé de poner un espacio entre <code>'Me gusta'</code> y <code>'el pastel de manzana.'</code>.
  Los espacios no importan generalmente salvo si lo hacen dentro de los textos.
  (Es verdad lo que dicen: las computadoras no hacen lo que tú <em>quieres</em>
  que hagan, solo lo que tú <em>le dices</em> que hagan) Intentémoslo nuevamente:</p>

<p><em>Código:</em></p>

<pre><code>puts 'Me gusta ' + 'el pastel de manzana.'
  puts 'Me gusta' + ' el pastel de manzana.'
</code></pre>

<p><em>Resultado:</em></p>

<pre><code>Me gusta el pastel de manzana
  Me gusta el pastel de manzana
</code></pre>

<p>(Como puedes ver, no importó a que texto le agregué el espacio)</p>

<p>Así que puedes sumar textos, ¡pero también puedes multiplicarlas!
  (Por un número ...) Observa esto:</p>

<p><em>Código:</em></p>

<pre><code>puts 'parpadeo ' * 4
</code></pre>

<p><em>Resultado:</em></p>

<pre><code>batea tus párpados
</code></pre>

<p>(Solo bromeaba, en realidad muestra esto):</p>

<pre><code>parpadeo parpadeo parpadeo parpadeo
</code></pre>

<p>Si lo piensas, tiene todo el sentido. Después de todo,
  <code>7*3</code> realmente solo significa <code>7+7+7</code>, así que <code>'moo'*3</code> solo
  significa <code>'moo'+'moo'+'moo'</code>.</p>

<h2>
  <a name="12-vs-12" class="anchor" href="#12-vs-12"><span class="mini-icon mini-icon-link"></span></a><code>12</code>
  vs <code>'12'</code>
</h2>

<p>Antes de ir más allá, debemos asegurarnos de entender la
  diferencia entre <em>números</em> y <em>dígitos</em>.
  <code>12</code> es un número, pero <code>'12'</code> es un texto de dos dígitos.</p>

<p>Juguemos con esto un poco:</p>

<p><em>Código:</em></p>

<pre><code>puts 12 + 12
  puts '12' + '12'
  puts '12 + 12'
</code></pre>

<p><em>Resultado:</em></p>

<pre><code>24
  1212
  12 + 12
</code></pre>

<p>Y qué sucede con esto?:</p>

<p><em>Código:</em></p>

<pre><code>puts 2 * 5
  puts '2' * 5
  puts '2 * 5'
</code></pre>

<p><em>Resultado:</em></p>

<pre><code>10
  22222
  2 * 5
</code></pre>

<p>Estos ejemplos fueron bastante directos. De cualquier modo, si no tienes
  cuidado en cómo mezclas tus textos y tus números podrías encontrarte con...</p>

<h2>
  <a name="problemas" class="anchor" href="#problemas"><span class="mini-icon mini-icon-link"></span></a>Problemas</h2>

<p>En este punto podrías haber probado algunas cosas que
  <em>no funcionaron</em>. Si no lo has hecho, aquí hay algunas:</p>

<p><em>Código:</em></p>

<pre><code>puts '12' + 12
  puts '2' * '5'
</code></pre>

<p><em>Resultado:</em></p>

<pre><code>can't convert Fixnum into String (TypeError)
</code></pre>

<p>Hmmm... un mensaje de error. El problema es que en realidad
  no puedes sumar un número a un texto, o multiplicar
  un texto por otro texto. No tiene más sentido que esto:</p>

<pre><code>puts 'Betty' + 12
  puts 'Fred' * 'John'
</code></pre>

<p>Algo más para tener cuidado: Puedes escribir <code>'pig'*5</code> en un programa,
  dado que sólo significa <code>5</code> veces el texto <code>'pig'</code> todo
  sumado. De cualquier modo,
  tú <em>no puedes</em> escribir <code>5*'pig'</code>, ya que eso significa <code>'pig'</code>
  veces el número <code>5</code>, lo cual es simplemente tonto.</p>

<p>Finalmente, y si quisieras que tu programa imprimiera
  <code>¡Mi nombre es O'hara!</code>? Podrías intentar:</p>

<pre><code>puts '¡Mi nombre es O'hara!'
</code></pre>

<p>Bueno, <em>eso</em> no funcionará; No intentaré ni ejecutarlo.
  La computadora pensó que habíamos terminado con el texto.
  (Esta es la razón de porque es lindo tener un editor de
  texto que haga coloreo sintáctico por ti)
  ¿Entonces, cómo permitimos que la computadora sepa que
  queremos permanecer en el texto? Tenemos que escapar
  el apóstrofe, de esta manera:</p>

<pre><code>puts '¡Mi nombre es O\'hara!'
</code></pre>

<p>La barra invertida es el carácter de escape. En otras palabras,
  si tú tienes una barra invertida y otro carácter, ellos a veces son
  convertidos a otro carácter. Las únicas cosas que una barra invertida
  escapa son los apóstrofes y las propias barras invertidas. (Si lo
  piensas un poco, los caracteres escapados siempre se escapan a sí mismo)
  Unos pocos ejemplos vendrían muy bien, me parece:</p>

<p><em>Código:</em></p>

<pre><code>puts '¡Mi nombre es O\'hara!'
  puts 'barra invertida al final del texto: \\'
  puts 'arriba\\abajo'
  puts 'arriba\abajo'
</code></pre>

<p><em>Resultado:</em></p>

<pre><code>¡Mi nombre es O'hara!
  barra invertida al final del texto: \
  arriba\abajo
  arriba\abajo
</code></pre>

<p>Dado que la barra invertida <em>no</em> escapa un `'d',
  pero <em>si</em> si se escapa a si misma, esos dos últimos caracteres
  son idénticos. No parecen lo mismo en el código, pero en tu computadora
  son realmente los mismos. </p>

<p>Si tienes alguna pregunta, solo <%= link_to "¡sigue leyendo!", :controller => :ruby, :action => "variables" %>
  No podría contestar cada pregunta en <em>esta</em> página, después de todo.</p></article>
</div>
<br><br><br><br><br><br><br><br>